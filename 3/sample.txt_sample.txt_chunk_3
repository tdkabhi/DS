ile)
        else:
            logging.error("Failed to retrieve file list: %s", response.get('message'))

    def lease_file(self, filename):
        """Request an exclusive lease on a file."""
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as master_sock:
            master_sock.connect((self.master_host, self.master_port))
            lease_request = {'command': 'lease', 'filename': filename}
            master_sock.send(pickle.dumps(lease_request))
            response = pickle.loads(master_sock.recv(4096))

        if response.get('status') == 'success':
            logging.info("Lease granted for file %s", filename)
        else:
            logging.warning("Lease request failed for file %s: %s", filename, response.get('message'))

    def unlease_file(self, filename):
        """Release the exclusive lease on a file."""
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as master_sock:
            master_sock.connect((self.master_host, self.master_port))
            unlease_request = {'command': 'unlease', 'filename': filename}
            master_sock.send(pickle.dumps(unlease_request))
            response = pickle.loads(master_sock.recv(4096))

        if response.get('status') == 'success':
            logging.info("Lease released for file %s", filename)
        else:
            logging.warning("Failed to release lease for file %s: %s", filename, response.get('message'))

    def run(self):
        """Run the client interaction loop."""
        while True:
            print("\nClient Menu:")
            print("1. Upload File")
            print("2. Download File")
            print("3. List Files")
            print("4. Lease File")
            print("5. Unlease File")
            print("6. Exit")

            choice = input("Enter your choice (1-6): ").strip()
            if choice == '1':
                filename = input("Enter the filename to upload: ").strip()
                self.upload_file(filename)
            elif choice == '2':
                filename = input("Ent